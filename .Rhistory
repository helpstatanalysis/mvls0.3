install.packages("devtools")
install.packages("roxygen2")
library(devtools)
library(roxygen2)
library(mvls)
install_github("devtools","hadley")
library(mvls)
library(mvls)
library(mvls)
library(mvls)
library(devtools)
install.packages("devtools")
library(mvls)
library(mvls)
library(mvls)
install.packages("roxygen2")
install.packages("roxygen2")
remove.packages("roxygen2")
install.packages("roxygen2")
library(roxygen2)
yes
install.packages("roxygen2")
library(roxygen2)
remove.packages("roxygen2")
install.packages("roxygen2")
library(roxygen2)
library(roxygen2)
install.packages("stringi")
install.packages("roxygen2")
library(mvls)
library(mvls)
library(mvls)
library(devtools)
library(roxygen2)
library(mvls)
library(mvls)
library(mvls)
library(mvls)
?mvls
?visualdiagmvls
library(mvls)
library(mvls)
install.packages("mice")
install.packages("mice")
library(devtools)
library(devtools)
library(roxygen2)
install.packages(mice)
install.packages("mice")
install.packages("reshape2")
install.packages("zoo")
install.packages("ggplot2")
install.packages("randomForestSRC")
install.packages("mice")
install.packages("pvclust")
library(devtools)
library(roxygen2)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
mvls.print(db.prov, d=0.1, method = "k", varmatrix = F)
library(mvls)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
mvls$matrix
toclusterfunc.imp(db.prov, 0.1, imp.method='locf')
toclusterfunc.noimp<-function(data, d){
data<-exclude(data)
matrix<-data
result<-normalize(data)
data<-result$data
index<-result$index
db.var<-var.matrix(data,d)
result<-return(list(data=data,index=index,vari.matrix=db.var,matrix=matrix))
}
toclusterfunc.imp(db.prov, 0.1, imp.method='locf')
toclusterfunc.imp<-function(data, d, imp.method='mean'){
data<-exclude(data)
matrix<-data
data.imp<-preimputation(data, imp.method)
result.imp<-normalize(data)
db.var<-var.matrix(result.imp$data,d)
result<-normalize(data)
data<-result$data
index<-result$index
result<-return(list(data=data,index=index,vari.matrix=db.var,matrix=matrix))
}
toclusterfunc.imp(db.prov, 0.1, imp.method='locf')
library(mvls)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
function(mvls){
result<-pvclust(mvls$var.matrix,method.dist=cor,method.hlust="average",nboot=10)
}
mvls-pvclust<-function(mvls){
result<-pvclust(mvls$var.matrix,method.dist=cor,method.hlust="average",nboot=10)
}
mvls.pvclust<-function(mvls){
result<-pvclust(mvls$var.matrix,method.dist=cor,method.hlust="average",nboot=10)
}
mvls.pvclust(mvls)
mvls$vari.matrix
pvclust(mvls$var.matrix,method.dist=cor,method.hlust="average",nboot=10)
library(pvclust)
pvclust(mvls$var.matrix,method.dist=cor,method.hlust="average",nboot=10)
pvclust(mvls$var.matrix,method.dist=cor,method.hclust="average",nboot=10)
pvclust(mvls$var.matrix,method.dist="cor",method.hclust="average",nboot=10)
pvclust(mvls$var.matrix,method.dist="correlation",method.hclust="average",nboot=10)
pvclust(mvls$var.matrix,method.hclust="average",nboot=10)
pvclust(mvls$var.matrix,method.hclust="average",nboot=1000)
pvclust(mvls$var.matrix,nboot=1000)
pvclust(mvls$var.matrix, use.cor="all.obs", nboot=1000)
pvclust(data=mvls$var.matrix, use.cor="all.obs", nboot=1000)
mvls$var.matrix
mvls<-mvls(db.prov,d=0.1,cluster = 12, method = "h", pre.imp = T)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
mvls$vari.matrix
pvclust(data=mvls$var.matrix, use.cor="all.obs", nboot=1000)
pvclust(data=mvls$var.matrix, method.hclust="average",
method.dist="correlation", use.cor="pairwise.complete.obs",use.cor="all.obs", nboot=1000)
pvclust(data=mvls$var.matrix, method.hclust="average",
method.dist="correlation", use.cor="pairwise.complete.obs", nboot=1000)
pvclust(db.prov, method.hclust="average",
method.dist="correlation", use.cor="pairwise.complete.obs", nboot=1000)
pvclust(db.prov, method.hclust="average",
method.dist="correlation", use.cor="pairwise.complete.obs", nboot=10)
result<-pvclust(db.prov, method.hclust="average",
method.dist="correlation", use.cor="pairwise.complete.obs", nboot=10)
plot(result)
pvrect(result,alpha = 0.95)
plot(result)
pvrect(result,alpha = 0.95)
plot(result)
pvrect(result,alpha = 0.95)
pvrect(result,alpha = 0.60)
seaplot(result)
seplot(result)
seplot(result, identify = T)
library(mvls)
library(mvls)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
library(mvls)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
mvls$vari.matrix
mvls$data
result<-mvls.pvclust(mvls, data="data",nboot=100)
plot(result)
pvrect(result,alpha = 0.60)
seplot(result, identify = T)
library(mvls)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h", pre.imp = T, imp.method = "locf")
mvls<-mvls(db.prov,d=0.1,cluster = 12, method = "h", pre.imp = T)
mvls<-mvls(db.prov,d=0.1,cluster = 4, method = "h", pre.imp = T, imp.method = "locf")
result<-mvls.pvclust(mvls, data="data",nboot=100)
plot(result)
pvrect(result,alpha = 0.60)
seplot(result)
result<-mvls.pvclust(mvls, data="vari.matrix",nboot=100)
plot(result)
pvrect(result,alpha = 0.60)
seplot(result)
result<-mvls.pvclust(mvls, data="vari.matrix",nboot=1000)
plot(result)
pvrect(result,alpha = 0.95)
seplot(result)
result<-mvls.pvclust(mvls, data="vari.matrix",nboot=10000)
plot(result)
pvrect(result,alpha = 0.95)
seplot(result)
mvls<-mvls(db.prov,d=0.1,cluster = 4, method = "h", pre.imp = T, imp.method = "locf")
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "k", pre.imp = T, imp.method = "locf")
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "k")
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "k", pre.imp = T, imp.method = "locf")
result<-mvls.pvclust(mvls, data="vari.matrix",nboot=10000)
plot(result)
pvrect(result,alpha = 0.95)
seplot(result)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "k")
result<-mvls.pvclust(mvls, data="vari.matrix",nboot=10000)
plot(result)
pvrect(result,alpha = 0.95)
mvls<-mvls(db.prov,d=0.1,cluster = 8, method = "h")
result<-mvls.pvclust(mvls, data="vari.matrix",nboot=10000)
plot(result)
pvrect(result,alpha = 0.95)
seplot(result)
install.packages(Mclust)
install.packages("mclust")
lirary(mclust)
library(mclust)
Mclust(db.prov,G=1:9)
Mclust(mvls$vari.matrix,G=1:9)
Mclust(mvls$vari.matrix,G=1:20)
result<-Mclust(mvls$vari.matrix,G=1:20)
result$parameters
result$data
result$modelName
result$n
result$G
result$classification
plot(result, what = "classification")
plot(result, what = "density")
plot(result, what = "classification")
result<-Mclust(mvls$vari.matrix,G=1:8)
result$classification
plot(result, what = "classification")
result<-Mclust(mvls$data,G=1:8)
result$classification
plot(result, what = "classification")
result<-Mclust(db.prov,G=1:8)
preimputation<-function(data, imp.method='mean'){
if(imp.method=='mean'){
data<-mice(data, method = 'mean',printFlag = F)
datapreimput<-complete(data)
}
if(imp.method=='locf'){
data<-t(db.prov)
data<-na.locf(data)
data<-t(data)
data<-mice(data, method = 'mean', printFlag = F)
datapreimput<-complete(data)
}
return(datapreimput)
}
library(mclust)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
library(mvls)
result<-mvls.Mclust(db.prov,imp.method="locf",G=1:12)
mvls.print(db.prov, d=0.1, method = "k", varmatrix = F)
result<-mvls.Mclust(db.prov,imp.method="locf",G=1:12)
result<-mvls.Mclust(db.prov,imp.method="locf",G=1:12)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
library(mvls)
result<-mvls.Mclust(db.prov,imp.method="locf",G=1:12)
result$data
library(mvls)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
result<-mvls.Mclust(db.prov,imp.method="locf",G=1:12)
install.packages("fpc")
result$data
result$sd.1
db.prov<-exclude(db.prov)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
db.prov<-exclude(db.prov)
exclude<-function(data){
db.null<-data
db.exclude<-data
for(i in 1:dim(data)[1]){
for(l in 1:dim(data)[2]){
if(is.na(data[i,l])==T){db.null[i,l]<-0
}else(db.null[i,l]<-1)
}
}
for(i in 1:dim(data)[1]){
if(sum(db.null[i,])==0){db.exclude<-data[-i,]}
}
return(db.exclude)
}
db.prov<-exclude(db.prov)
data.pi<-preimputation(db.prov,imp.method="locf")
result<-pamk(db.prov,krange = 2:12, scaling = T)
library(fpc)
result<-pamk(db.prov,krange = 2:12, scaling = T)
db.prov<-exclude(db.prov)
data.pi<-preimputation(db.prov,imp.method="locf")
result<-pamk(db.prov,krange = 2:12, scaling = T)
data.pi<-preimputation(db.prov,imp.method="mean")
result<-pamk(db.prov,krange = 2:12, scaling = T)
data.pi
data.pi<-preimputation(db.prov,imp.method="locf")
result<-pamk(data.pi,krange = 2:12, scaling = T)
result$nc
pam(data.pi,result$nc, cluster.only=T)
library(fpc)
pam(data.pi,result$nc, cluster.only=T)
plot(result)
result<-pamk(data.pi,krange = 2:12, scaling = T)
plot(result)
result$nc
library(cluster)
pam<-pam(data.pi,result$nc, cluster.only=T)
pam
result(pam)
pam<-pam(data.pi,result$nc, cluster.only=F)
result(pam)
pam<-pam(data.pi,result$nc, cluster.only=F)
plot(pam)
pam$clustering
plot(result)
clusterCut<-pam$clustering
clu.matrix<-matrix(rep(clusterCut,dim(data)[2]),ncol =(dim(data)[2]))
library(mvls)
db.prov<-data.frame(sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T),sample(1:100, 300, replace=T))
names(db.prov)<-c('a','b','c','d')
db.prov[240,1]<-NA
db.prov[241,2]<-NA
db.prov[242,3]<-NA
db.prov[243,4]<-NA
db.prov[244,1:2]<-NA
db.prov[245,3:4]<-NA
db.prov[246,2:3]<-NA
db.prov[247,1:2]<-NA
db.prov[248,2:4]<-NA
db.prov[249,1:4]<-NA
mvls.pam(db.prov)
result<-mvls.pam(db.prov)
result$data
plot(result$pam)
result$pam$clusinfo
library(mvls)
